cmake_minimum_required(VERSION 3.17)
project(godpiler)

set(CMAKE_CXX_STANDARD 20)

set(PARSER_DIR "${PROJECT_SOURCE_DIR}/Parsing")

find_package(FLEX 2.6 REQUIRED)
find_package(BISON 3.5 REQUIRED)

set(LEXER_OUT "${PARSER_DIR}/lexer.c")
set(PARSER_OUT "${PARSER_DIR}/parser.c")

flex_target(LEXER "${PARSER_DIR}/lexer.l" "${LEXER_OUT}" DEFINES_FILE "${PARSER_DIR}/lexer.h")
bison_target(PARSER "${PARSER_DIR}/parser.y" "${PARSER_OUT}" DEFINES_FILE "${PARSER_DIR}/parser.h")
add_flex_bison_dependency(LEXER PARSER)

add_executable(codegen main.cpp "${LEXER_OUT}" "${PARSER_OUT}" Parsing/node.h Parsing/node.c ASTNode/VariableReferenceASTNode.cpp ASTNode/VariableReferenceASTNode.h Instruction/Instruction.h Instruction/Operand.cpp Instruction/Operand.h ASTNode/ExpASTNode/ExpASTNode.cpp ASTNode/ExpASTNode/ExpASTNode.h ASTNode/ExpASTNode/IntegerLiteralExpASTNode.cpp ASTNode/ExpASTNode/IntegerLiteralExpASTNode.h ASTNode/ExpASTNode/NormalOperationExpASTNode.cpp ASTNode/ExpASTNode/NormalOperationExpASTNode.h Instruction/NormalOperationInstruction.cpp Instruction/NormalOperationInstruction.h Instruction/MoveInstruction.cpp Instruction/MoveInstruction.h ASTNode/StatementASTNode/AssignmentStatementASTNode.cpp ASTNode/StatementASTNode/AssignmentStatementASTNode.h SymbolTable/FunctionSymbolTableEntry.cpp SymbolTable/FunctionSymbolTableEntry.h SymbolTable/VariableSymbolTableEntry.cpp SymbolTable/VariableSymbolTableEntry.h SymbolTable/SymbolTable.cpp SymbolTable/SymbolTable.h SymbolTable/SymbolTableEntry.cpp SymbolTable/SymbolTableEntry.h VariableTypeEnum.h ASTNode/StatementASTNode/StatementASTNode.cpp ASTNode/StatementASTNode/StatementASTNode.h ASTNode/StatementASTNode/PrintLineStatementASTNode.cpp ASTNode/StatementASTNode/PrintLineStatementASTNode.h ASTNode/ExpASTNode/VariableReferenceExpASTNode.cpp ASTNode/ExpASTNode/VariableReferenceExpASTNode.h Instruction/BranchLinkInstruction.cpp Instruction/BranchLinkInstruction.h Instruction/LoadInstruction.cpp Instruction/LoadInstruction.h ASTNode/StatementASTNode/StatementsASTNode.cpp ASTNode/StatementASTNode/StatementsASTNode.h ASTNode/ExpASTNode/MethodCallExpASTNode.cpp ASTNode/ExpASTNode/MethodCallExpASTNode.h ASTNode/StatementASTNode/ReturnStatementASTNode.cpp ASTNode/StatementASTNode/ReturnStatementASTNode.h Instruction/FunctionReturnPlaceholderInstruction.cpp Instruction/FunctionReturnPlaceholderInstruction.h ASTNode/ExpASTNode/BooleanOperationExpASTNode.cpp ASTNode/ExpASTNode/BooleanOperationExpASTNode.h Instruction/CompareInstruction.cpp Instruction/CompareInstruction.h BooleanOperationTypeEnum.h Instruction/ConditionalMoveInstruction.cpp Instruction/ConditionalMoveInstruction.h ASTNode/StatementASTNode/IfElseStatementASTNode.cpp ASTNode/StatementASTNode/IfElseStatementASTNode.h Instruction/BranchInstruction.cpp Instruction/BranchInstruction.h Instruction/LabelInstruction.cpp Instruction/LabelInstruction.h Instruction/ConditionalBranchInstruction.cpp Instruction/ConditionalBranchInstruction.h ASTNode/StatementASTNode/WhileStatementASTNode.cpp ASTNode/StatementASTNode/WhileStatementASTNode.h ASTNode/FunctionASTNode.cpp ASTNode/FunctionASTNode.h Instruction/SaveCalleeSavedRegistersPlaceholderInstruction.cpp Instruction/SaveCalleeSavedRegistersPlaceholderInstruction.h Instruction/ExtendStackPointerPlaceholderInstruction.cpp Instruction/ExtendStackPointerPlaceholderInstruction.h Liveness/LivenessTable.cpp Liveness/LivenessTable.h Liveness/LivenessTableEntry.cpp Liveness/LivenessTableEntry.h Instruction/Instruction.cpp StaticHelperFunctions.cpp StaticHelperFunctions.h Interference/InterferenceGraph.cpp Interference/InterferenceGraph.h Interference/InterferenceEdge.cpp Interference/InterferenceEdge.h Interference/InterferenceNode.cpp Interference/InterferenceNode.h Coloring/ChaitinBriggsColorer.cpp Coloring/ChaitinBriggsColorer.h Instruction/PushInstruction.cpp Instruction/PushInstruction.h Instruction/PopInstruction.cpp Instruction/PopInstruction.h Instruction/RetractStackPointerPlaceholderInstruction.cpp Instruction/RetractStackPointerPlaceholderInstruction.h ASTNode/ExpASTNode/IntegerProgramArgumentExpASTNode.cpp ASTNode/ExpASTNode/IntegerProgramArgumentExpASTNode.h ASTNode/TmpASTNode/VariableReferenceTmpASTNode.cpp ASTNode/TmpASTNode/VariableReferenceTmpASTNode.h ASTNode/TmpASTNode/MethodCallStatementTmpASTNode.cpp ASTNode/TmpASTNode/MethodCallStatementTmpASTNode.h ASTNode/TmpASTNode/ReturnStatementTmpASTNode.cpp ASTNode/TmpASTNode/ReturnStatementTmpASTNode.h Parsing/ASTConstructor.cpp ASTNode/TmpASTNode/MethodCallTmpExpASTNode.cpp ASTNode/TmpASTNode/MethodCallTmpExpASTNode.h Parsing/ASTConstructor.h ASTNode/StatementASTNode/MethodCallStatementASTNode.cpp ASTNode/StatementASTNode/MethodCallStatementASTNode.h ASTNode/ExpASTNode/ArgStringReferenceASTNode.cpp ASTNode/ExpASTNode/ArgStringReferenceASTNode.h Instruction/ShiftInstruction.cpp Instruction/ShiftInstruction.h ASTNode/ExpASTNode/IntegerParseIntExpASTNode.cpp ASTNode/ExpASTNode/IntegerParseIntExpASTNode.h ASTNode/ExpASTNode/StringLiteralExpNode.cpp ASTNode/ExpASTNode/StringLiteralExpNode.h ASTNode/ExpASTNode/LogicalInverseExpASTNode.cpp ASTNode/ExpASTNode/LogicalInverseExpASTNode.h)

target_include_directories(codegen PRIVATE "${PARSER_DIR}")